@model TL4_SHOP.Models.ViewModels.ThongKeViewModel
@using Newtonsoft.Json

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewData["Title"] = "Thống kê doanh thu - 4TL";
    Layout = "~/Views/Shared/Layout_Admin.cshtml";
}
<link rel="stylesheet" href="~/css/admin.css" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">


<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        /* Sidebar mặc định */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: 250px;
            background-color: #2c3e50;
            color: white;
            padding-top: 20px;
            transition: left 0.3s ease;
            z-index: 999;
        }

            /* Khi ẩn sidebar */
            .sidebar.hidden {
                left: -250px;
            }

            .sidebar a {
                display: flex;
                align-items: center;
                padding: 15px 20px;
                color: white;
                text-decoration: none;
            }

                .sidebar a:hover {
                    background-color: #34495e;
                }

                .sidebar a i {
                    margin-right: 10px;
                }

        /* Nút toggle (☰) */
        .toggle-btn {
            position: fixed;
            top: 20px;
            left: 20px;
            background-color: #2980b9;
            color: white;
            padding: 10px 15px;
            font-size: 20px;
            border: none;
            cursor: pointer;
            z-index: 1000;
            border-radius: 4px;
        }

            .toggle-btn:hover {
                background-color: #1c638f;
            }

        /* Nội dung chính */
        .content {
            margin-left: 20px;
            padding: 20px;
        }

        /* Khi sidebar đang hiện, dịch nội dung chính sang phải */
        .sidebar-shown .content {
            margin-left: 270px;
            transition: margin 0.3s;
        }
        /* Vô hiệu hóa mục sidebar */
        .disabled-link {
            pointer-events: none; /* Không cho click */
            opacity: 0.4; /* Làm mờ */
            cursor: not-allowed; /* Hiển thị dấu cấm */
        }

            /* Làm mờ icon */
            .disabled-link i {
                color: #7f8c8d !important;
            }
    </style>

    <!--Thanh cuộn-->
</head>
<body>

    <!-- Nút toggle -->
    <button class="toggle-btn" onclick="toggleSidebar()">☰</button>

    <!-- Sidebar -->
    <div class="sidebar hidden" id="sidebar">
        <div style="margin-top: 60px">
            <a asp-action="Index" asp-controller="Admin"><i class="fas fa-home disabled-link"></i> Home</a>
            <a asp-action="Index" asp-controller="QuanLySanPham"><i class="fas fa-box disabled-link"></i> Quản lý sản phẩm</a>
            <a asp-action="Index" asp-controller="NhapHang"><i class="fas fa-truck-loading disabled-link"></i> Nhập hàng</a>
            <a asp-action="Index" asp-controller="NhaCungCap"><i class="fas fa-truck disabled-link"></i> Nhà cung cấp</a>
            <a asp-action="Index" asp-controller="ChamSocKhachHang"><i class="fas fa-headset disabled-link"></i> Chăm sóc khách hàng</a>
            <a href="#"><i class="fas fa-box" style="color: orange"></i> Quản lý đơn hàng</a>
            <a href="#"><i class="fas fa-shopping-cart" style="color: orange"></i> Đơn hàng</a>
            <a asp-action="ThongKeDoanhThu" asp-controller="ThongKeDoanhThu"><i class="fas fa-chart-bar" style="color: orange"></i>Thống kê doanh thu</a>
            <a asp-action="QuanLyNhanVien" asp-controller="QuanLyNhanVien"><i class="fas fa-users-cog disabled-link"></i>Quản lý nhân viên</a>
            <a asp-action="KhachHang" asp-controller="KhachHang"><i class="fas fa-user-friends disabled-link"></i>Khách hàng</a>
        </div>
    </div>

    <!-- Nội dung chính -->
    <div class="content" id="mainContent">
        <h1>Chào mừng đến trang thống kê doanh thu</h1>
    </div>

    <!-- JavaScript Toggle -->
    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById("sidebar");
            const content = document.getElementById("mainContent");
            sidebar.classList.toggle("hidden");
            document.body.classList.toggle("sidebar-shown");
        }
    </script>
</body>


<style>
    .chart-wrapper {
        max-width: 900px;
        margin: auto;
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }

    canvas {
        max-height: 400px;
        width: 100%;
    }

    .admin-container {
        font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
</style>

<div class="admin-header text-center mb-4">
    <div class="container">
        <h1><i class="fas fa-chart-bar me-3"></i> Thông kê doanh thu</h1>
        <p>Thống kê doanh thu toàn bộ sản phẩm trong cửa hàng 4TL Shop</p>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-3">
        <div class="card text-white bg-success mb-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title" style="font-family:Tahoma">Tổng doanh thu</h5>
                        <p class="card-text">@Model.DoanhThuNgay.Sum(x => x.TongDoanhThu ?? 0).ToString("N0") đ</p>
                    </div>
                    <i class="fas fa-chart-bar fa-2x"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-white bg-danger mb-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5 class="card-title" style="font-family:Tahoma">Tổng lợi nhuận</h5>
                        <p class="card-text">@Model.DoanhThuNgay.Sum(x => x.LoiNhuan ?? 0).ToString("N0") đ</p>
                    </div>
                    <i class="fas fa-chart-pie fa-2x"></i>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bảng chi tiết theo ngày -->
<h3 class="mt-5" style="font-family:Tahoma">Bảng chi tiết theo ngày</h3>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Ngày</th>
            <th>Số đơn hàng</th>
            <th>Tổng số lượng</th>
            <th>Tổng doanh thu</th>
            <th>Lợi nhuận</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DoanhThuNgay)
        {
        <tr>
            <td>@item.Ngay.ToString("dd/MM/yyyy")</td>
            <td>@item.TongSoDonHang</td>
            <td>@item.TongSoLuong</td>
            <td>@item.TongDoanhThu?.ToString("N0") đ</td>
            <td>@item.LoiNhuan?.ToString("N0") đ</td>
        </tr>
        }
    </tbody>
</table>

<!--Sơ đồ doanh thu theo ngày-->
<div class="chart-wrapper mt-5">
    <h4 class="mb-3" style="font-family:Tahoma">📅 Doanh thu theo ngày</h4>
    <canvas id="chartDoanhThuNgay"></canvas>
</div>

<!-- Bảng chi tiết theo tháng -->
<h3 class="mt-4" style="font-family:Tahoma">Bảng chi tiết theo tháng</h3>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Tháng/Năm</th>
            <th>Số đơn hàng</th>
            <th>Tổng số lượng</th>
            <th>Tổng doanh thu</th>
            <th>Lợi nhuận</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DoanhThuThang)
        {
        <tr>
            <td>@item.Thang/@item.Nam</td>
            <td>@item.TongSoDonHang</td>
            <td>@item.TongSoLuong</td>
            <td>@item.TongDoanhThu?.ToString("N0") đ</td>
            <td>@item.LoiNhuan?.ToString("N0") đ</td>
        </tr>
        }
    </tbody>
</table>

<!--Sơ đồ doanh thu theo tháng-->
<div class="chart-wrapper mt-5">
    <h4 class="mb-3" style="font-family:Tahoma">📆 Doanh thu & Lợi nhuận theo tháng</h4>
    <canvas id="chartDoanhThuThang"></canvas>
</div>

<!-- Bảng chi tiết theo năm -->
<h3 class="mt-4" style="font-family:Tahoma">Bảng chi tiết theo năm</h3>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Năm</th>
            <th>Số đơn hàng</th>
            <th>Tổng số lượng</th>
            <th>Tổng doanh thu</th>
            <th>Lợi nhuận</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DoanhThuNam)
        {
        <tr>
            <td>@item.Nam</td>
            <td>@item.TongSoDonHang</td>
            <td>@item.TongSoLuong</td>
            <td>@item.TongDoanhThu?.ToString("N0") đ</td>
            <td>@item.LoiNhuan?.ToString("N0") đ</td>
        </tr>
        }
    </tbody>
</table>

<!--Sơ đồ doanh thu theo năm-->
<div class="chart-wrapper mt-5">
    <h4 class="mb-3" style="font-family:Tahoma">📈 Doanh thu & Lợi nhuận theo năm</h4>
    <canvas id="chartDoanhThuNam"></canvas>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // ---------- Doanh thu theo ngày (Bar) ----------
    const labelsNgay = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuNgay.Select(x => x.Ngay.ToString("dd/MM"))));
    const dataDoanhThuNgay = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuNgay.Select(x => x.TongDoanhThu ?? 0)));

    new Chart(document.getElementById("chartDoanhThuNgay"), {
        type: 'bar',
        data: {
            labels: labelsNgay,
            datasets: [{
                label: "Doanh thu (ngày)",
                data: dataDoanhThuNgay,
                backgroundColor: 'rgba(54, 162, 235, 0.6)'
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return value.toLocaleString('vi-VN') + ' đ';
                        }
                    }
                }
            }
        }
    });

    // ---------- Doanh thu theo tháng (Bar) ----------
    const labelsThang = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuThang.Select(x => x.Thang.ToString("D2") + "/" + x.Nam)));
    const dataDoanhThuThang = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuThang.Select(x => x.TongDoanhThu ?? 0)));
    const dataLoiNhuanThang = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuThang.Select(x => x.LoiNhuan ?? 0)));

    new Chart(document.getElementById("chartDoanhThuThang"), {
        type: 'bar',
        data: {
            labels: labelsThang,
            datasets: [
                {
                    label: 'Doanh thu',
                    data: dataDoanhThuThang,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)'
                },
                {
                    label: 'Lợi nhuận',
                    data: dataLoiNhuanThang,
                    backgroundColor: 'rgba(255, 159, 64, 0.6)'
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                title: {
                    display: true,
                    text: 'Doanh thu và lợi nhuận theo tháng'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return value.toLocaleString('vi-VN') + ' đ';
                        }
                    }
                }
            }
        }
    });

         // ---------- Doanh thu theo năm (Bar Chart) ----------
    const labelsNam = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuNam.Select(x => x.Nam)));
    const dataDoanhThuNam = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuNam.Select(x => x.TongDoanhThu ?? 0)));
    const dataLoiNhuanNam = @Html.Raw(JsonConvert.SerializeObject(Model.DoanhThuNam.Select(x => x.LoiNhuan ?? 0)));

    new Chart(document.getElementById("chartDoanhThuNam"), {
        type: 'bar', // 🔄 Chuyển sang biểu đồ cột
        data: {
            labels: labelsNam,
            datasets: [
                {
                    label: 'Doanh thu',
                    data: dataDoanhThuNam,
                    backgroundColor: 'rgba(75, 192, 192, 0.6)', // Màu xanh dương nhạt
                    borderWidth: 1
                },
                {
                    label: 'Lợi nhuận',
                    data: dataLoiNhuanNam,
                    backgroundColor: 'rgba(255, 159, 64, 0.6)', // Màu cam nhạt
                    borderWidth: 1
                }
            ]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                title: {
                    display: true,
                    text: 'Doanh thu và lợi nhuận theo năm'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return value.toLocaleString('vi-VN') + ' đ';
                        }
                    }
                }
            }
        }
    });
</script>
